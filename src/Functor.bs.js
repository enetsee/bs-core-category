// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");

function S_to_S2(X) {
  return {
          map: X.map,
          $$void: X.$$void,
          Functor_infix: X.Functor_infix,
          $less$$great: X.$less$$great,
          $less$amp$great: X.$less$amp$great,
          $less$: X.$less$,
          $$great: X.$$great
        };
}

function S2_to_S(X) {
  return {
          map: X.map,
          $$void: X.$$void,
          Functor_infix: X.Functor_infix,
          $less$$great: X.$less$$great,
          $less$amp$great: X.$less$amp$great,
          $less$: X.$less$,
          $$great: X.$$great
        };
}

function S2_to_S3(X) {
  return {
          map: X.map,
          $$void: X.$$void,
          Functor_infix: X.Functor_infix,
          $less$$great: X.$less$$great,
          $less$amp$great: X.$less$amp$great,
          $less$: X.$less$,
          $$great: X.$$great
        };
}

function S3_to_S2(X) {
  return {
          map: X.map,
          $$void: X.$$void,
          Functor_infix: X.Functor_infix,
          $less$$great: X.$less$$great,
          $less$amp$great: X.$less$amp$great,
          $less$: X.$less$,
          $$great: X.$$great
        };
}

function Make3(X) {
  var map = X.map;
  var $less$$great = function (f, x) {
    return Curry._2(map, x, f);
  };
  var $less$amp$great = Curry.__2(map);
  var $less$ = function (x, t) {
    return Curry._2(map, t, (function (param) {
                  return x;
                }));
  };
  var $$great = function (t, x) {
    return Curry._2(map, t, (function (param) {
                  return x;
                }));
  };
  var Functor_infix = {
    $less$$great: $less$$great,
    $less$amp$great: $less$amp$great,
    $less$: $less$,
    $$great: $$great
  };
  var $$void = function (t) {
    return Curry._2(map, t, (function (param) {
                  return /* () */0;
                }));
  };
  return {
          map: map,
          $$void: $$void,
          Functor_infix: Functor_infix,
          $less$$great: $less$$great,
          $less$amp$great: $less$amp$great,
          $less$: $less$,
          $$great: $$great
        };
}

function Make2(X) {
  var map = X.map;
  var $less$$great = function (f, x) {
    return Curry._2(map, x, f);
  };
  var $less$amp$great = Curry.__2(map);
  var $less$ = function (x, t) {
    return Curry._2(map, t, (function (param) {
                  return x;
                }));
  };
  var $$great = function (t, x) {
    return Curry._2(map, t, (function (param) {
                  return x;
                }));
  };
  var Functor_infix = {
    $less$$great: $less$$great,
    $less$amp$great: $less$amp$great,
    $less$: $less$,
    $$great: $$great
  };
  var $$void = function (t) {
    return Curry._2(map, t, (function (param) {
                  return /* () */0;
                }));
  };
  return {
          map: map,
          $$void: $$void,
          Functor_infix: Functor_infix,
          $less$$great: $less$$great,
          $less$amp$great: $less$amp$great,
          $less$: $less$,
          $$great: $$great
        };
}

function Make(X) {
  var map = X.map;
  var $less$$great = function (f, x) {
    return Curry._2(map, x, f);
  };
  var $less$amp$great = Curry.__2(map);
  var $less$ = function (x, t) {
    return Curry._2(map, t, (function (param) {
                  return x;
                }));
  };
  var $$great = function (t, x) {
    return Curry._2(map, t, (function (param) {
                  return x;
                }));
  };
  var Functor_infix = {
    $less$$great: $less$$great,
    $less$amp$great: $less$amp$great,
    $less$: $less$,
    $$great: $$great
  };
  var $$void = function (t) {
    return Curry._2(map, t, (function (param) {
                  return /* () */0;
                }));
  };
  return {
          map: map,
          $$void: $$void,
          Functor_infix: Functor_infix,
          $less$$great: $less$$great,
          $less$amp$great: $less$amp$great,
          $less$: $less$,
          $$great: $$great
        };
}

exports.S_to_S2 = S_to_S2;
exports.S2_to_S = S2_to_S;
exports.S2_to_S3 = S2_to_S3;
exports.S3_to_S2 = S3_to_S2;
exports.Make = Make;
exports.Make2 = Make2;
exports.Make3 = Make3;
/* No side effect */
