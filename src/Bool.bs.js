// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Monoid$CoreCategory = require("./Monoid.bs.js");

function bool(p, f, t) {
  if (p) {
    return t;
  } else {
    return f;
  }
}

function combine(prim, prim$1) {
  if (prim) {
    return prim$1;
  } else {
    return false;
  }
}

var BasicAnd = {
  empty: true,
  combine: combine
};

function combine$1(prim, prim$1) {
  if (prim) {
    return true;
  } else {
    return prim$1;
  }
}

var include = Monoid$CoreCategory.Make0({
      combine: combine$1,
      empty: false
    });

var Or_empty = include.empty;

var Or_combine = include.combine;

var Or_Semigroup_infix = include.Semigroup_infix;

var Or_$less$great = include.$less$great;

var Or = {
  empty: Or_empty,
  combine: Or_combine,
  Semigroup_infix: Or_Semigroup_infix,
  $less$great: Or_$less$great
};

function combine$2(prim, prim$1) {
  if (prim) {
    return prim$1;
  } else {
    return false;
  }
}

var include$1 = Monoid$CoreCategory.Make0({
      combine: combine$2,
      empty: true
    });

var And_empty = include$1.empty;

var And_combine = include$1.combine;

var And_Semigroup_infix = include$1.Semigroup_infix;

var And_$less$great = include$1.$less$great;

var And = {
  empty: And_empty,
  combine: And_combine,
  Semigroup_infix: And_Semigroup_infix,
  $less$great: And_$less$great
};

exports.bool = bool;
exports.BasicAnd = BasicAnd;
exports.Or = Or;
exports.And = And;
/* include Not a pure module */
