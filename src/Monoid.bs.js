// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Semigroup$CoreCategory = require("./Semigroup.bs.js");

function S0_to_S1(X) {
  return X;
}

function S1_to_S0(X) {
  return X;
}

function S1_to_S2(X) {
  return X;
}

function S2_to_S1(X) {
  return X;
}

function S2_to_S3(X) {
  return X;
}

function S3_to_S2(X) {
  return X;
}

function Make3(X) {
  var include = Semigroup$CoreCategory.Make3(X);
  return {
          mempty: X.mempty,
          append: include.append,
          SemigroupInfix: include.SemigroupInfix,
          $less$great: include.$less$great
        };
}

function Make2(X) {
  var mempty = X.mempty;
  var X_append = X.append;
  var X$1 = {
    append: X_append,
    mempty: mempty
  };
  var include = Semigroup$CoreCategory.Make3(X$1);
  return {
          mempty: mempty,
          append: include.append,
          SemigroupInfix: include.SemigroupInfix,
          $less$great: include.$less$great
        };
}

function Make1(X) {
  var mempty = X.mempty;
  var X_append = X.append;
  var X$1 = {
    append: X_append,
    mempty: mempty
  };
  var include = Semigroup$CoreCategory.Make3(X$1);
  return {
          mempty: mempty,
          append: include.append,
          SemigroupInfix: include.SemigroupInfix,
          $less$great: include.$less$great
        };
}

function Make0(X) {
  var mempty = X.mempty;
  var X_append = X.append;
  var X$1 = {
    append: X_append,
    mempty: mempty
  };
  var include = Semigroup$CoreCategory.Make3(X$1);
  return {
          mempty: mempty,
          append: include.append,
          SemigroupInfix: include.SemigroupInfix,
          $less$great: include.$less$great
        };
}

function MakeDual3(X) {
  var mempty = X.mempty;
  var append = function (x, y) {
    return Curry._2(X.append, y, x);
  };
  var X$1 = {
    append: append,
    mempty: mempty
  };
  var include = Semigroup$CoreCategory.Make3(X$1);
  return {
          mempty: mempty,
          append: include.append,
          SemigroupInfix: include.SemigroupInfix,
          $less$great: include.$less$great
        };
}

function MakeDual2(X) {
  var append = X.append;
  var mempty = X.mempty;
  var append$1 = function (x, y) {
    return Curry._2(append, y, x);
  };
  var X$1 = {
    append: append$1,
    mempty: mempty
  };
  var include = Semigroup$CoreCategory.Make3(X$1);
  return {
          mempty: mempty,
          append: include.append,
          SemigroupInfix: include.SemigroupInfix,
          $less$great: include.$less$great
        };
}

function MakeDual1(X) {
  var append = X.append;
  var mempty = X.mempty;
  var append$1 = function (x, y) {
    return Curry._2(append, y, x);
  };
  var X$1 = {
    append: append$1,
    mempty: mempty
  };
  var include = Semigroup$CoreCategory.Make3(X$1);
  return {
          mempty: mempty,
          append: include.append,
          SemigroupInfix: include.SemigroupInfix,
          $less$great: include.$less$great
        };
}

function MakeDual0(X) {
  var append = X.append;
  var mempty = X.mempty;
  var append$1 = function (x, y) {
    return Curry._2(append, y, x);
  };
  var X$1 = {
    append: append$1,
    mempty: mempty
  };
  var include = Semigroup$CoreCategory.Make3(X$1);
  return {
          mempty: mempty,
          append: include.append,
          SemigroupInfix: include.SemigroupInfix,
          $less$great: include.$less$great
        };
}

function append(x, y) {
  if (x) {
    return true;
  } else {
    return y;
  }
}

var X = {
  append: append,
  mempty: false
};

var include = Semigroup$CoreCategory.Make3(X);

var Or_append = include.append;

var Or_SemigroupInfix = include.SemigroupInfix;

var Or_$less$great = include.$less$great;

var Or = {
  mempty: false,
  append: Or_append,
  SemigroupInfix: Or_SemigroupInfix,
  $less$great: Or_$less$great
};

function append$1(x, y) {
  if (x) {
    return y;
  } else {
    return false;
  }
}

var X$1 = {
  append: append$1,
  mempty: true
};

var include$1 = Semigroup$CoreCategory.Make3(X$1);

var And_append = include$1.append;

var And_SemigroupInfix = include$1.SemigroupInfix;

var And_$less$great = include$1.$less$great;

var And = {
  mempty: true,
  append: And_append,
  SemigroupInfix: And_SemigroupInfix,
  $less$great: And_$less$great
};

exports.S0_to_S1 = S0_to_S1;
exports.S1_to_S0 = S1_to_S0;
exports.S1_to_S2 = S1_to_S2;
exports.S2_to_S1 = S2_to_S1;
exports.S2_to_S3 = S2_to_S3;
exports.S3_to_S2 = S3_to_S2;
exports.Make0 = Make0;
exports.Make1 = Make1;
exports.Make2 = Make2;
exports.Make3 = Make3;
exports.MakeDual0 = MakeDual0;
exports.MakeDual1 = MakeDual1;
exports.MakeDual2 = MakeDual2;
exports.MakeDual3 = MakeDual3;
exports.Or = Or;
exports.And = And;
/* include Not a pure module */
