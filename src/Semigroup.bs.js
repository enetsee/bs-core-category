// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");

function Make0(X) {
  var combine = X.combine;
  var Semigroup_infix = {
    $less$great: combine
  };
  return {
          combine: combine,
          Semigroup_infix: Semigroup_infix,
          $less$great: combine
        };
}

function MakeDual0(X) {
  var combine = function (x, y) {
    return Curry._2(X.combine, y, x);
  };
  var Semigroup_infix = {
    $less$great: combine
  };
  return {
          combine: combine,
          Semigroup_infix: Semigroup_infix,
          $less$great: combine
        };
}

function Make(X) {
  var combine = X.combine;
  var Semigroup_infix = {
    $less$great: combine
  };
  return {
          combine: combine,
          Semigroup_infix: Semigroup_infix,
          $less$great: combine
        };
}

function MakeDual(X) {
  var combine = function (x, y) {
    return Curry._2(X.combine, y, x);
  };
  var Semigroup_infix = {
    $less$great: combine
  };
  return {
          combine: combine,
          Semigroup_infix: Semigroup_infix,
          $less$great: combine
        };
}

function Make2(X) {
  var combine = X.combine;
  var Semigroup_infix = {
    $less$great: combine
  };
  return {
          combine: combine,
          Semigroup_infix: Semigroup_infix,
          $less$great: combine
        };
}

function MakeDual2(X) {
  var combine = function (x, y) {
    return Curry._2(X.combine, y, x);
  };
  var Semigroup_infix = {
    $less$great: combine
  };
  return {
          combine: combine,
          Semigroup_infix: Semigroup_infix,
          $less$great: combine
        };
}

exports.Make0 = Make0;
exports.MakeDual0 = MakeDual0;
exports.Make = Make;
exports.MakeDual = MakeDual;
exports.Make2 = Make2;
exports.MakeDual2 = MakeDual2;
/* No side effect */
